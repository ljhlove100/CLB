<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycompany.myapp.payment.PaymentDAO">

    <!-- 상품별 주문내역 -->
    <select id="getPaymentList" resultType="com.mycompany.myapp.payment.PaymentVO">
    SELECT COUNT(PAYMENT_ID) AS "pCount" ,P_NAME, SUM(TOTAL_AMT) AS "pSum"
       FROM PAYMENT
     	 GROUP BY P_NAME
    </select>
    
    <!-- 주문상품 결제금액 조회 -->
    <select id="getPayment" resultType="com.mycompany.myapp.payment.PaymentVO">
    	SELECT SUM(TOTAL_AMT) as "sumAmt"
			FROM (SELECT P_NO, P_NAME, PRICE, U_ID, TOTAL_AMT, CART_ID, IMAGE
        			FROM SHOPPING_LIST 
						WHERE U_ID = #{uId}
      						group by p_no,p_name,price,u_id,total_amt,cart_id,image
      	 						ORDER BY CART_ID)
    </select>
    
    <!-- 주문 내역조회 -->
    <select id="getPaymentList2" resultType="com.mycompany.myapp.payment.PaymentVO">
    select a.* from ( select rownum rn, b.* from (
    	SELECT DISTINCT PAYMENT_ID, P_NAME, TOTAL_AMT
     	  FROM PAYMENT
    		 ORDER BY PAYMENT_ID
    ) b ) a where rn between #{first} and #{last}
    </select>
    
    <!-- 월별 매출현황 조회 -->
    <select id="getPaymentList3" resultType="com.mycompany.myapp.payment.PaymentVO">
		select to_char(paymentdate,'mm') as "pMonth", count(*) as "pCount" ,to_char(sum(total_amt) ,'L9,999,999') as "pSum"
			from payment
				where to_char(paymentdate,'yyyymm')
				between '201801' and '201812'
				group by to_char(paymentdate,'mm')
				order by to_char(paymentdate,'mm') asc
	</select>
	
	<!-- 일별 매출현황 조회 -->
	<select id="getPaymentList4" resultType="com.mycompany.myapp.payment.PaymentVO">
		select to_char(paymentdate,'dd') as "pDay", count(*) as "pCount", to_char(sum(total_amt) ,'L9,999,999') as "pSum" 
			from payment
				where to_char(paymentdate,'yyyymmdd')
				between '20180701' and '20180730'
				group by to_char(paymentdate,'dd')
				order by to_char(paymentdate,'dd') asc
	</select>
    
    <!-- 카운터 조회 -->
    <select id="getCount" resultType="int">
   		SELECT COUNT(*) FROM PAYMENT
   </select>
    
   
   <!-- 추가 -->
   	<insert id="paymentInsert" parameterType="com.mycompany.myapp.payment.PaymentVO">
   		INSERT INTO PAYMENT(P_NAME,TOTAL_AMT,P_NO,PAYMENTDATE,U_ID,PAYMENT_ID)
  		VALUES(#{pName},
  			   #{totalAmt},
  			   #{pNo},
  			   sysdate,
  			   #{uId},
  			   payment_id_seq.nextval)
   	</insert>
   	
   	<insert id="paymentInsert2" parameterType="com.mycompany.myapp.payment.PaymentVO">
   		insert into payment(p_name,total_amt,p_no,paymentdate,payment_id)
  		values(#{pName},
  			   #{totalAmt},
  			   #{pNo},
  			   sysdate,
  			   payment_id_seq.nextval)
   	</insert>
   	
   	<insert id="paymentInsert3" parameterType="com.mycompany.myapp.payment.PaymentVO">
   		insert into payment(p_name,total_amt,p_no,paymentdate,payment_id)
  		values(#{pName},
  			   #{totalAmt},
  			   #{pNo},
  			   sysdate,
  			   payment_id_seq.nextval)
   	</insert>
  
   	
   	<!-- 상품별 판매 수 -->
	<select id="getPayCnt" resultType="map">
		SELECT COUNT(PAYMENT_ID) AS "pCount" ,P_NAME
       		FROM PAYMENT
      			GROUP BY P_NAME
	</select>
	
		<!-- 월별 판매 수 -->
	<select id="getPayCnt2" resultType="map">
		select to_char(paymentdate,'mm') as "pMonth", sum(total_amt) as "pSum"
			from payment
				where to_char(paymentdate,'yyyymm')
				between '201801' and '201812'
				group by to_char(paymentdate,'mm')
				order by to_char(paymentdate,'mm') asc
	</select>
	
		<!-- 일별 판매 수 -->
	<select id="getPayCnt3" resultType="map">
		select to_char(paymentdate,'dd') as "pDay", sum(total_amt) as "pSum" 
			from payment
				where to_char(paymentdate,'yyyymmdd')
				between '20180701' and '20180730'
				group by to_char(paymentdate,'dd')
				order by to_char(paymentdate,'dd') asc
	</select>
	
	<!-- 결제 취소 -->
   <delete id="paymentDelete" parameterType="com.mycompany.myapp.payment.PaymentVO">
   	DELETE PAYMENT
   	WHERE PAYMENT_ID = #{paymentId}
   </delete>
   
</mapper>
